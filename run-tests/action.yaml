name: 'Run tests in the container'
description: 'Run tests in the container'
inputs:
  image_name:
    description: 'Image name'
    required: true
    default: ${{ github.event.repository.name }}
  image_tag:
    description: "Image tag. Set to 'testing' if you want to use the multi-stage image built by the 'build-image' action"
    required: false
    default: latest
  docker_args:
    description: "Arguments for 'docker run'"
    required: false
    default: ''
  static:
    description: 'Static analysis commands'
    required: false
  unit:
    description: 'Unit test commands'
    required: false
  functional:
    description: 'Functional test commands'
    required: false
  e2e:
    description: 'E2e test commands'
    required: false
  e2e_port:
    description: 'Port for e2e tests (required only if the image exposes multiple ports)'
    required: false
  post:
    description: 'Command to run for last'
    required: false
  env_file:
    description: 'Env file'
    required: false
    default: /dev/null
  entrypoint:
    description: 'Entrypoint'
    required: false
    default: /bin/sh -c
  e2e_readiness_timeout:
    description: 'Seconds to wait for te container to be ready before throwing an error'
    required: false
    default: '60'
runs:
  using: "composite"
  steps:
    - name: Running static analysis
      if: inputs.static != ''
      uses: checkout-charlie/github-actions/run-command@main
      with:
        command: ${{ inputs.static }}
        run_args: ${{ inputs.docker_args }}
        image_name: ${{ inputs.image_name }}
        image_tag: ${{ inputs.image_tag }}
        env_file: ${{ inputs.env_file }}
        entrypoint: ${{ inputs.entrypoint }}
    - name: Running unit tests
      if: inputs.unit != ''
      uses: checkout-charlie/github-actions/run-command@main
      with:
        command: ${{ inputs.unit }}
        run_args: ${{ inputs.docker_args }}
        image_name: ${{ inputs.image_name }}
        image_tag: ${{ inputs.image_tag }}
        env_file: ${{ inputs.env_file }}
        entrypoint: ${{ inputs.entrypoint }}
    - name: Running functional tests
      if: inputs.functional != ''
      uses: checkout-charlie/github-actions/run-command@main
      with:
        command: ${{ inputs.functional }}
        run_args: ${{ inputs.docker_args }}
        image_name: ${{ inputs.image_name }}
        image_tag: ${{ inputs.image_tag }}
        env_file: ${{ inputs.env_file }}
        entrypoint: ${{ inputs.entrypoint }}
    - name: Running e2e tests
      if: inputs.e2e != ''
      run: ${{ github.action_path }}/../scripts/docker-run-e2e.sh "${{ inputs.image_name }}" "${{ inputs.image_tag }}" "${{ inputs.docker_args }}" "${{ inputs.e2e }}" "${{ inputs.env_file }}" "${{ inputs.e2e_port }}" "${{ inputs.e2e_readiness_timeout }}"
      shell: sh
    - name: Running post commands
      if: inputs.post != ''
      uses: checkout-charlie/github-actions/run-command@main
      with:
        command: ${{ inputs.post }}
        run_args: ${{ inputs.docker_args }}
        image_name: ${{ inputs.image_name }}
        image_tag: ${{ inputs.image_tag }}
        env_file: ${{ inputs.env_file }}
