name: 'Create PR environment'
description: 'Create PR environment on PR open'
inputs:
  humanitec_token:
    description: 'Humanitec access token'
    required: true
  humanitec_org:
    description: 'Humanitec organization'
    required: true
  app_id:
    description: 'Application ID on Humanitec'
    required: true
  source_environment:
    description: 'Environment to clone from'
    required: true
  environment_type:
    description: 'Generated environment type'
    required: true
    default: development
  images:
    description: 'Comma separated list of images to be automated. Leave blank to automate all images.'
    required: false
    default: ''
  environment_name:
    description: 'Generated environment name. Defaults to PR #'
    required: false
    default: ${{ github.event.number }}
  preview_url_template:
    description: 'Preview url for notifications. E.g. "https://<github.event.repository.name>-$<github.event.number>.domain.com"'
    required: false
    default : ''
  teams_webhook:
    description: 'Teams webhook for notifications'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
      - uses: actions/github-script@v6
        env:
          HUMANITEC_ORG: ${{ inputs.humanitec_org }}
          HUMANITEC_TOKEN: ${{ inputs.humanitec_token }}
        with:
          script: |
            const humanitec = require('${{ github.action_path }}/../scripts/humanitec.js');
            const BASE_ENV_ID = `${{ inputs.source_environment }}`;
            const HUMANITEC_ORG = `${{ inputs.humanitec_org }}`;
            const ENV_ID = `${{ inputs.environment_name }}`;
            const APP_ID = `${{ inputs.app_id }}`;
            const BRANCH_NAME = `${context.payload.pull_request.head.ref}`;
            const ENV_PATH = `/orgs/${HUMANITEC_ORG}/apps/${APP_ID}/envs/${ENV_ID}`;
            const IMAGES = `${{ inputs.images }}` == '' ? [] : `${{ inputs.images }}`.split(",").map(item => `registry.humanitec.io/${{ inputs.humanitec_org }}/${item.trim()}`);

            console.log(`Creating PR environment ${ENV_ID} for ${APP_ID} from ${BASE_ENV_ID}`);

            const env = await humanitec.cloneEnvironment(APP_ID, BASE_ENV_ID, ENV_ID);
            if (env.status > 400) {
              if (env.status == 409) {
                console.error(`Cannot create preview environment. Environment with ID "${ENV_ID}" already exists.`);
              } else {
                console.error(`Cannot create preview environment: ${JSON.stringify(env.body)}`);
              }
              return;
            }

            console.log(`Created preview environment: ${JSON.stringify(env.body)} `);
            console.log(`Creating automation rule ${ENV_ID} for ${APP_ID} from ${BASE_ENV_ID} branch ${BRANCH_NAME}`);
            const rule = await humanitec.addAutomationRule(APP_ID, ENV_ID, IMAGES, BRANCH_NAME);
            if (rule.status > 400) {
              console.error(`Cannot create atomation rule in environment ${ENV_ID}: ${JSON.stringify(rule.body)}`);
              return;
            }

            console.info(`Created automation rule response: ${JSON.stringify(rule.body)}`);

            let deployment_url = `${{ inputs.preview_url_template }}`
            if (deployment_url == '') {
              deployment_url = `N/A`;
            }

            if (
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `Preview URL: ${deployment_url}\nHumanitec environment: https://app.humanitec.io${ENV_PATH}`
            });

      - name: Send message to ms teams
        uses: dhollerbach/actions.send-message-to-ms-teams@1.0.10
        if : ${{ inputs.teams_webhook != '' && inputs.preview_url_template != '' }}
        with:
          webhook: '${{ inputs.teams_webhook }}'
          message: '${{ github.event.pull_request.title }}\n${{ inputs.preview_url_template }}'
